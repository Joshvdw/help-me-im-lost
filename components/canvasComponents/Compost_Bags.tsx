/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    compost_bags_floorstacked: THREE.Mesh
    compost_bags_leaning: THREE.Mesh
    compost_bags_floor: THREE.Mesh
    compost_bags_standing: THREE.Mesh
  }
  materials: {
    compost_bags: THREE.MeshPhysicalMaterial
  }
}

export function Compost_Bags(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glbs/Compost_Bags.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.compost_bags_floorstacked.geometry} material={materials.compost_bags} position={[-0.4, 0.07, 0]} />
      <mesh geometry={nodes.compost_bags_leaning.geometry} material={materials.compost_bags} position={[0.7, 0, 0.08]} rotation={[1.51, 0.14, -1.16]} />
      <mesh geometry={nodes.compost_bags_floor.geometry} material={materials.compost_bags} position={[-0.4, 0, 0]} rotation={[0.05, 0, 0]} />
      <mesh geometry={nodes.compost_bags_standing.geometry} material={materials.compost_bags} position={[0.25, 0, -0.01]} />
    </group>
  )
}

useGLTF.preload('/glbs/Compost_Bags.glb')
